"use client";
import { useState, ChangeEvent, FormEvent } from "react";

type Errors<T> = Partial<Record<keyof T, string>>;

interface UseFormProps<T> {
  /** –ù–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã */
  initialValues: T;
  /** –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –æ–±—ä–µ–∫—Ç –æ—à–∏–±–æ–∫ */
  validate?: (values: T) => Errors<T>;
  /** –ö–æ–ª–±—ç–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ */
  onSubmit: (values: T) => void | Promise<void>;
}

/**
 * useForm ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ö—ÉŒ∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
 * üìå –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ª—é–±–æ–º –Ω–∞–±–æ—Ä–µ –ø–æ–ª–µ–π.
 */
const useForm = <T>({ initialValues, validate, onSubmit }: UseFormProps<T>) => {
  const [values, setValues] = useState<T>(initialValues);
  const [errors, setErrors] = useState<Errors<T>>({});
  const [isSubmitting, setIsSubmitting] = useState(false);

  /** –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—è */
  const handleChange = (
    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    const { name, value } = e.target;
    setValues((prev) => ({ ...prev, [name]: value }));
  };

  /** –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã */
  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (validate) {
      const validationErrors = validate(values);
      setErrors(validationErrors);
      if (Object.keys(validationErrors).length > 0) {
        // –ù–µ—Ç —à–∞–Ω—Å–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è, –ø–æ–∫–∞ –Ω–µ –∏—Å–ø—Ä–∞–≤–∏—à—å
        return;
      }
    }
    setIsSubmitting(true);
    try {
      await onSubmit(values);
    } finally {
      setIsSubmitting(false);
    }
  };

  /** –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–æ—Ä–º—ã –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º */
  const resetForm = () => {
    setValues(initialValues);
    setErrors({});
  };

  return {
    values,
    errors,
    isSubmitting,
    handleChange,
    handleSubmit,
    resetForm,
  };
};

export default useForm;
